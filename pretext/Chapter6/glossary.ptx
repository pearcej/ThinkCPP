<?xml version="1.0"?>
<section xml:id="chapter6_glossary">
  <title>Glossary</title>
  <dl>
    <li>
      <title>loop:</title>
      <p>A statement that executes repeatedly while a condition is true or
        until some condition is satisfied.</p>
    </li>
    <li>
      <title>infinite loop:</title>
      <p>A loop whose condition is always true.</p>
    </li>
    <li>
      <title>body:</title>
      <p>The statements inside the loop.</p>
    </li>
    <li>
      <title>iteration:</title>
      <p>One pass through (execution of) the body of the loop, including the
        evaluation of the condition.</p>
    </li>
    <li>
      <title>tab:</title>
      <p>A special character, written as <c>\t</c> in C++, that causes the cursor to move to the next
        tab stop on the current line.</p>
    </li>
    <li>
      <title>encapsulate:</title>
      <p>To divide a large complex program into components (like functions)
        and isolate the components from each other (for example, by using
        local variables).</p>
    </li>
    <li>
      <title>local variable:</title>
      <p>A variable that is declared inside a function and that exists only
        within that function. Local variables cannot be accessed from outside
        their home function, and do not interfere with any other functions.</p>
    </li>
    <li>
      <title>generalize:</title>
      <p>To replace something unnecessarily specific (like a constant value)
        with something appropriately general (like a variable or parameter).
        Generalization makes code more versatile, more likely to be reused,
        and sometimes even easier to write.</p>
    </li>
    <li>
      <title>development plan:</title>
      <p>A process for developing a program. In this chapter, I demonstrated a
        style of development based on developing code to do simple, specific
        things, and then encapsulating and generalizing.</p>
    </li>
  </dl>
  <exercise label="chapter_six_glossary_one">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback>
      <p>Try again!</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>loop</premise>
        <response>A statement that executes repeatedly while a condition is true or some condition
          is satisfied.</response>
      </match>
      <match order="2">
        <premise>infinite loop</premise>
        <response>A loop whose condition is always true.</response>
      </match>
      <match order="3">
        <premise>body</premise>
        <response>The statements inside the loop.</response>
      </match>
      <match order="4">
        <premise>iteration</premise>
        <response>One pass through (execution of) the body of the loop, including the valuation of
          the condition.</response>
      </match>
      <match order="5">
        <premise>tab</premise>
        <response>A special character, written as \t in C++, that causes the cursor to move to the
          next tab stop on the current line.</response>
      </match>
    </matches>
  </exercise>
  <exercise label="chapter_six_glossary_two">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback>
      <p>Try again!</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>encapsulate</premise>
        <response>To divide a large complex program into components (like functions) and isolate the
          components from each other (for example, by using local variables).</response>
      </match>
      <match order="2">
        <premise>local variable</premise>
        <response>A variable that is declared inside a function and that exists only within that
          function. Local variables cannot be accessed from outside their home function, and do not
          interfere with any other functions.</response>
      </match>
      <match order="3">
        <premise>generalize</premise>
        <response>To replace something unnecessarily specific (like a constant value) with something
          appropriately general (like a variable or parameter).</response>
      </match>
      <match order="4">
        <premise>development plan</premise>
        <response>A process for developing a program.</response>
      </match>
    </matches>
  </exercise>
</section>