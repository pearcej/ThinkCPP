<?xml version="1.0"?>
<section xml:id="chapter4_the-return-statement">
  <title>The Return Statement</title>
  <p>The <c>return</c> statement allows you to terminate the execution of a function before you reach the
    end. One reason to use it is if you detect an error condition:</p>
  <listing label="return_AC_1">
    <caption>
      This program will terminate with a return statement if the argument
        provided is not positive. Try running the code as is. If you get
        an error message, try changing the value of x.
    </caption>
    <program xml:id="return_AC_1_editor"
             interactive="activecode"
             line-numbers="yes">
      <code><![CDATA[
#include <iostream>
#include <cmath>
using namespace std;

void printLogarithm(double x) {
    if (x <= 0.0) {
        cout << "Positive numbers only, please." << endl;
        return;
    }
    double result = log (x);
    cout << "The log of x is " << result;
}

 int main() {
     double y = -9.8;
     printLogarithm(y);
     return 0;
 }
        ]]></code>
    </program>
  </listing>
  <p>This defines a function named <c>printLogarithm</c> that takes a <c>double</c> named x as a parameter. The first
    thing it does is check whether x is less than or equal to zero, in which case it displays an
    error message and then uses <c>return</c> to exit the function. The flow of execution immediately
    returns to the caller and the remaining lines of the function are not executed.</p>
  <p>I used a floating-point value on the right side of the condition because
    there is a floating-point variable on the left.</p>
  <p>Remember that any time you want to use one a function from the math library, you have to
    include the header file <c>&lt;cmath&gt;</c>.</p>
  <p>Putting <c>return 0;</c> in your code ends your program. Let's look back at a program from section 4.3.
    How would your answer change?</p>
  <exercise label="return_1">
    <statement>
      <p>What will print?</p>
      <program>#include &lt;iostream&gt;
using namespace std;

int main() {
  int x = 8;
  if (x &gt; 8) {
    cout &lt;&lt; "One! ";
  }
  if (x &gt; 6) {
    cout &lt;&lt; "Two! ";
  }
  if (x &gt; 3) {
    cout &lt;&lt; "Three!" &lt;&lt; endl;
  }
  return 0;
}</program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>One! Two! Three!</p>
        </statement>
        <feedback>
          <p>Take a look at the first conditional statement more closely.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Two! Three!</p>
        </statement>
        <feedback>
          <p>8 is not greater than 8, so it doesn't meet the first condition.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Three!</p>
        </statement>
        <feedback>
          <p>All of the following are "if" statements, with no return. There are no "else"
            statements.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Two!</p>
        </statement>
        <feedback>
          <p>All of the following are "if" statements, with no return. There are no "else"
            statements.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>One!</p>
        </statement>
        <feedback>
          <p>Take a look at the first conditional statement more closely.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="return_2">
    <statement>
      <p>What will print?</p>
      <program>#include &lt;iostream&gt;
using namespace std;

int main() {
  int x = 8;
  if (x &gt; 8) {
    cout &lt;&lt; "One! ";
    return 0;
  }
  if (x &gt; 6) {
    cout &lt;&lt; "Two! ";
    return 0;
  }
  if (x &gt; 3) {
    cout &lt;&lt; "Three!" &lt;&lt; endl;
    return 0;
  }
  return 0;
}</program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>One! Two! Three!</p>
        </statement>
        <feedback>
          <p>Try again! 8 is not greater than 8, so the first condition will not be met.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Two! Three!</p>
        </statement>
        <feedback>
          <p>Try again! Remember what "return 0" is for!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Three!</p>
        </statement>
        <feedback>
          <p>Try again! 8 is greater than 6!</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Two!</p>
        </statement>
        <feedback>
          <p>Correct!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>One!</p>
        </statement>
        <feedback>
          <p>Take a look at the first conditional statement more closely.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>