<?xml version="1.0"?>
<section xml:id="chapter7_strings-are-comparable">
  <title><c>string</c>s are comparable</title>
  <p>All the comparison operators that work on <c>int</c>s and <c>double</c>s also work on <c>strings</c>.</p>
  <listing label="strings_comparable_AC_1">
    <caption>
      This active code checks to see if <c>word</c> is equal to <c>"banana"</c>.
    </caption>
    <program xml:id="strings_comparable_AC_1_editor"
             interactive="activecode"
             line-numbers="yes">
      <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    string word = "banana";
    if (word == "banana") {
        cout << "Yes, we have no bananas!" << endl;
    }
    return 0;
}
        ]]></code>
    </program>
  </listing>
  <p>The other comparison operations are useful for putting words in
    alphabetical order.</p>
  <listing label="strings_comparable_AC_2">
    <caption>
      This active code uses comparison operators to determine the ordering of <c>word</c>
        relative to <c>"banana"</c>.
    </caption>
    <program xml:id="strings_comparable_AC_2_editor"
             interactive="activecode"
             line-numbers="yes">
      <code><![CDATA[
#include <iostream>
using namespace std;

int main() {

  string word = "Zebra";

  if (word < "banana") {
    cout << "Your word, " << word << ", comes before banana." << endl;
  } else if (word > "banana") {
    cout << "Your word, " << word << ", comes after banana." << endl;
  } else {
    cout << "Yes, we have no bananas!" << endl;
  }
}
        ]]></code>
    </program>
  </listing>
  <p>You should be aware, though, that the <c>string</c> class does not handle upper and lower case
    letters the same way that people do. All the upper case letters come before all the lower case
    letters. As a result,</p>
  <console><output>Your word, Zebra, comes before banana.</output></console>
  <p>A common way to address this problem is to convert strings to a standard
    format, like all lower-case, before performing the comparison. The next
    sections explains how. I will not address the more difficult problem,
    which is making the program realize that zebras are not fruit.</p>
  <p>For the following questions, remember that in C++ <c>1</c> means true and <c>0</c> means false.</p>
  <exercise label="strings_comparable_1">
    <statement>
      <p>What would the result of the following comparison be? Where <c>1</c> means true and <c>0</c>
        means false.</p>
      <program line-numbers="yes">
        <code><![CDATA[
"Dog" < "Doghouse";
]]></code>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>Both match up to the g but Dog is shorter than Doghouse so it comes first in the
            dictionary.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>Strings are compared character by character.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="strings_comparable_2">
    <statement>
      <p>What would the result of the following comparison be? Where <c>1</c> means true and <c>0</c>
        means false.</p>
      <program line-numbers="yes">
        <code>
"dog" &lt; "Dog";
</code>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>d is greater than D</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>Yes, upper case is less than lower case according to the ordinal values of the
            characters.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>They are the same word</p>
        </statement>
        <feedback>
          <p>C++ is case sensitive meaning that upper case and lower case characters are different.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="strings_comparable_3">
    <statement>
      <p>What would the result of the following comparison be? Where <c>1</c> means true and <c>0</c>
        means false.</p>
      <program line-numbers="yes">
        <code><![CDATA[
"dog" < "Doghouse";
]]></code>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>d is greater than D.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>The length does not matter. Lower case d is greater than upper case D.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="strings_comparable_4">
    <statement>
      <p>What would the result of the following comparison be? Where <c>1</c> means true and <c>0</c>
        means false.</p>
      <program line-numbers="yes">
        <code><![CDATA[
"bread" < "bread";
]]></code>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>1</p>
        </statement>
        <feedback>
          <p>They are equal so one can't be greater than the other.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>0</p>
        </statement>
        <feedback>
          <p>Correct! because they are equal. They are equal because all characters match.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>