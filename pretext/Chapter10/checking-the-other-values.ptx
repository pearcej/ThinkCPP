<?xml version="1.0"?>
<section xml:id="chapter10_checking-the-other-values">
  <title>Checking the other values</title>
  <p><c>howMany</c> only counts the occurrences of a particular value, and we are interested in seeing how
    many times each value appears. We can solve that problem with a loop:</p>
  <program>int numValues = 20;
int upperBound = 10;
vector&lt;int&gt; vector = randomVector(numValues, upperBound);

cout &lt;&lt; "value\thowMany";

for (int i = 0; i &lt; upperBound; i++) {
  cout &lt;&lt; i &lt;&lt; '\t' &lt;&lt; howMany(vector, i) &lt;&lt; endl;
}</program>
  <p>Notice that it is legal to declare a variable inside a <c>for</c> statement. This syntax is
    sometimes convenient, but you should be aware that a variable declared inside a loop only exists
    inside the loop. If you try to refer to <c>i</c> later, you will get a compiler error.</p>
  <p>This code uses the loop variable as an argument to <c>howMany</c>, in order to check each value
    between 0 and 9, in order. The result is:</p>
  <console><output>value   howMany
0       2
1       1
2       3
3       3
4       0
5       2
6       5
7       2
8       0
9       2</output></console>
  <p>Again, it is hard to tell if the digits are really appearing equally often. If we increase <c>numValues</c>
    to 100,000 we get the following:</p>
  <console><output>value   howMany
0       10130
1       10072
2       9990
3       9842
4       10174
5       9930
6       10059
7       9954
8       9891
9       9958</output></console>
  <p>In each case, the number of appearances is within about 1% of the
    expected value (10,000), so we conclude that the random numbers are
    probably uniform.</p>
  <exercise label="checking_values_1">
    <statement>
      <p>If you declare a variable inside a <c>for</c> statement, where can it exist?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>inside of the for loop.</p>
        </statement>
        <feedback>
          <p>Correct!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>outside of the for loop, but inside of the function it's used in.</p>
        </statement>
        <feedback>
          <p>Incorrect! The variable goes out of scope as soon as the for loop terminates!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>outside of the function, and everywhere else in the program.</p>
        </statement>
        <feedback>
          <p>Incorrect! The variable goes out of scope as soon as the for loop terminates!</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="checking_values_2">
    <statement>
      <p><term>Multiple Response</term> When we increase the size of <c>numValues</c>, which of the following
        is true:</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>the difference between actual and expected number of appearances increases</p>
        </statement>
        <feedback>
          <p>Correct! The numbers go from being off by less than 5 to more than 100.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>the difference between actual and expected number of appearances decreases</p>
        </statement>
        <feedback>
          <p>Incorrect! Take a look at the numbers again!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>the percent by which the number of appearances differs from the expected number
            increases</p>
        </statement>
        <feedback>
          <p>Incorrect! Take a look at the numbers again!</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>the percent by which the number of appearances differs from the expected number
            decreases</p>
        </statement>
        <feedback>
          <p>Incorrect! As we continue to increase the size of numValues, the percent by which the
            number of appearances differes from the expected value approaches 0.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>