<?xml version="1.0"?>
<section xml:id="chapter14_glossary">
  <title>Glossary</title>
  <dl>
    <li>
      <title>class:</title>
      <p>In general use, a class is a user-defined type with member functions.
        In C++, a class is a structure with private instance variables.</p>
    </li>
    <li>
      <title>accessor function:</title>
      <p>A function that provides access (read or write) to a private instance
        variable.</p>
    </li>
    <li>
      <title>invariant:</title>
      <p>A condition, usually pertaining to an object, that should be true at
        all times in client code, and that should be maintained by all member
        functions.</p>
    </li>
    <li>
      <title>precondition:</title>
      <p>A condition that is assumed to be true at the beginning of a
        function. If the precondition is not true, the function may not work.
        It is often a good idea for functions to check their preconditions,
        if possible.</p>
    </li>
    <li>
      <title>postcondition:</title>
      <p>A condition that is true at the end of a function.</p>
    </li>
  </dl>
  <exercise label="glossary_14">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback>
      <p>Try again!</p>
    </feedback>
    <matches>
      <match order="1">
        <premise>class</premise>
        <response>In general use, a class is a user-defined type with member functions. In C++, a
          class is a structure with private instance variables.</response>
      </match>
      <match order="2">
        <premise>accessor function</premise>
        <response>A function that provides access (read or write) to a private instance variable.</response>
      </match>
      <match order="3">
        <premise>invariant</premise>
        <response>A condition, usually pertaining to an object, that should be true at all times in
          client code, and that should be maintained by all member functions.</response>
      </match>
      <match order="4">
        <premise>precondition</premise>
        <response>A condition that is assumed to be true at the beginning of a function. If the
          precondition is not true, the function may not work. It is often a good idea for functions
          to check their preconditions, if possible.</response>
      </match>
      <match order="5">
        <premise>postcondition</premise>
        <response>A condition that is true at the end of a function.</response>
      </match>
    </matches>
  </exercise>
</section>