<?xml version="1.0"?>
<section xml:id="chapter3_activecode-exercises-1">
  <title>Activecode Exercises</title>
  <p>Answer the following <term>Activecode</term> questions to
            assess what you have learned in this chapter.</p>
  <exercise label="XXX">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="functions_a2">
        <statement>
          <p>Fix the code below so that it prints <q>2 elephants</q>. Check the hint below for help with the construction of the code.</p>
        </statement>
        <program xml:id="functions_a2_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

void printAnimals(string a, int b) {
    cout << b << a;
}

int main() {
    // DO NOT MODIFY ANYTHING BELOW THIS LINE
    printAnimals(2, "elephants");
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
      <exercise label="functions_a2_pp" numbered="yes" adaptive="yes" indentation="hide">
        <statement>
          <p>Fix the code below so that it prints <q>2 elephants</q>. Use the lines to construct the code, then go back to complete the Activecode.</p>
        </statement>
        <blocks>
          <block order="2">
            <choice correct="yes">
              <cline>void printAnimals(int a, string b) {</cline>
            </choice>
            <choice>
              <cline>void printAnimals(string a, int b) { </cline>
            </choice>
          </block>
          <block order="5">
            <choice correct="yes">
              <cline><![CDATA[    cout << a << " " << b;]]></cline>
            </choice>
            <choice>
              <cline><![CDATA[    cout << b << " " << a; ]]></cline>
            </choice>
          </block>
          <block order="1">
            <cline><![CDATA[    cout << b << a; ]]></cline>
          </block>
          <block order="4">
            <cline>}</cline>
          </block>
          <block order="7">
            <cline>int main() {</cline>
          </block>
          <block order="3">
            <cline>    printAnimals(2, "elephants");</cline>
          </block>
          <block order="8">
            <cline>}</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="XXX">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="functions_a4">
        <statement>
          <p>Finish the code below so that it calculates the common log of <c>a</c> minus the <em>natural</em> log of <c>a</c> and prints the difference. You will need to use cmath functions.
                    Check the hint below for help with the construction of the code.</p>
        </statement>
        <program xml:id="functions_a4_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
#include <cmath>
using namespace std;

void logSubtraction(double a) {
    // Create the variable difference and assign it to the difference mentioned in the instructions

    cout << difference;
}

int main() {
    // DO NOT MODIFY ANYTHING BELOW THIS LINE
    cout << "Testing with a = 8..." << endl; cout << "    Your solution has difference = "; logSubtraction(8); cout << endl; cout << "    The correct solution has difference = -1.17635" << endl; cout << "Testing with a = -2..." << endl; cout << "    Your solution has difference = "; logSubtraction(-2); cout << endl; cout << "    The correct solution has difference = nan";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
      <exercise label="functions_a4_pp" numbered="yes" adaptive="yes" indentation="hide">
        <statement>
          <p>Finish the code below so that it calculates the common log of <c>a</c> minus the <em>natural</em> log of <c>a</c> and prints the difference. You will need to use cmath functions. Use the lines to construct the code, then go back to complete the Activecode.</p>
        </statement>
        <blocks>
          <block order="4">
            <cline>void logSubtraction(double a) {</cline>
          </block>
          <block order="7">
            <choice correct="yes">
              <cline>    double difference;</cline>
            </choice>
            <choice>
              <cline>    int difference; </cline>
            </choice>
          </block>
          <block order="6">
            <choice correct="yes">
              <cline>    difference = log10(a) - log(a);</cline>
            </choice>
            <choice>
              <cline>    difference = log(a) - log10(a); </cline>
            </choice>
          </block>
          <block order="1">
            <cline><![CDATA[    cout << difference;]]></cline>
          </block>
          <block order="3">
            <cline>}</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="XXX">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="functions_a6">
        <statement>
          <p>Write a function called <c>intDivision</c> that takes two doubles as parameters and prints the quotient of the <term>integer division</term> of the first number divided by the second.  Be sure to include any necessary headers.
                    Check the hint below for help with the construction of the code.</p>
        </statement>
        <program xml:id="functions_a6_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

void intDivision() {

}

int main() {
    // DO NOT MODIFY ANYTHING BELOW THIS LINE
    cout << "Testing with a = 2.4, b = 6.8..." << endl; cout << "    Your solution has a quotient of "; intDivision(2.4, 6.8); cout << endl; cout << "    The correct solution has a quotient of 0" << endl; cout << "Testing with a = -8.6, b = 4.2..." << endl; cout << "    Your solution has a quotient of "; intDivision(-8.6, 4.2); cout << endl; cout << "    The correct solution has a quotient of -2";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
      <exercise label="functions_a6_pp" numbered="yes" adaptive="yes" indentation="hide">
        <statement>
          <p>Write a function called <c>intDivision</c> that takes two doubles as parameters and prints the quotient of the <term>integer division</term> of the first number divided by the second.
                    Use the lines to construct the code, then go back to complete the Activecode.</p>
        </statement>
        <blocks>
          <block order="6">
            <choice correct="yes">
              <cline>void intDivision( double a, double b ) {</cline>
            </choice>
            <choice>
              <cline>void intDivision( int a, int b ) { </cline>
            </choice>
          </block>
          <block order="7">
            <choice correct="yes">
              <cline>    int difference;</cline>
            </choice>
            <choice>
              <cline>    double difference; </cline>
            </choice>
          </block>
          <block order="5">
            <cline>    difference = a / b;</cline>
          </block>
          <block order="2" correct="no">
            <cline>    difference = b / a; </cline>
          </block>
          <block order="3">
            <cline><![CDATA[    cout << difference << endl;]]></cline>
          </block>
          <block order="8">
            <cline>}</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="XXX">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="functions_a8">
        <statement>
          <p>Write a function called <c>volumePrism</c> that takes three <c>double</c> sidelengths as parameters, and calculates and prints the volume of a the rectangular prism.  Be sure to include any necessary headers.
                    Check the hint below for help with the construction of the code.</p>
        </statement>
        <program xml:id="functions_a8_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

void volumePrism() {

}

int main() {
    // DO NOT MODIFY ANYTHING BELOW THIS LINE
    cout << "Testing with a = 3, b = 4, c = 5..." << endl; cout << "    Your solution calculated a volume of "; volumePrism(3,4,5); cout << endl; cout << "    The correct solution calculates a volume of 60" << endl; cout << "Testing with a = 5.7, b = 3.9, c = 1.3..." << endl; cout << "    Your solution calculated a volume of "; volumePrism(5.7,3.9,1.3); cout << endl; cout << "    The correct solution calculates a volume of 28.899";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
      <exercise label="functions_a8_pp" numbered="yes" adaptive="yes" indentation="hide">
        <statement>
          <p>Write a function called <c>volumePrism</c> that takes three <c>double</c> sidelengths as parameters, and calculates and prints the volume of a the rectangular prism.
                    Use the lines to construct the code, then go back to complete the Activecode.</p>
        </statement>
        <blocks>
          <block order="4">
            <choice correct="yes">
              <cline>void volumePrism(double s1, double s2, double s3) {</cline>
            </choice>
            <choice>
              <cline>void volumePrism(int s1, int s2, int s3) { </cline>
            </choice>
          </block>
          <block order="7">
            <cline>    double volume;</cline>
          </block>
          <block order="5" correct="no">
            <cline>    int volume; </cline>
          </block>
          <block order="2">
            <cline>    volume = s1 * s2 * s3;</cline>
          </block>
          <block order="1">
            <cline><![CDATA[    cout << volume << endl;]]></cline>
          </block>
          <block order="3">
            <cline>}</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="XXX">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="functions_a10">
        <statement>
          <p>Write a function called <c>volumeSphere</c> that takes a <c>double</c> radius as a parameter, and calculates and prints the volume of a sphere with that radius.  Use 3.14 for <c>pi</c>.  Be sure to include any necessary headers.
                    Check the hint below for help with the construction of the code.</p>
        </statement>
        <program xml:id="functions_a10_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

void volumeSphere() {

}

int main() {
    // DO NOT MODIFY ANYTHING BELOW THIS LINE
    cout << "Testing with radius = 3..." << endl; cout << "    Your solution calculated a volume of "; volumeSphere(3); cout << endl; cout << "    The correct solution calculates a volume of 113.04" << endl; cout << "Testing with radius = 3.24..." << endl; cout << "    Your solution calculated a volume of "; volumeSphere(3.24); cout << endl; cout << "    The correct solution calculates a volume of 142.398";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Parsonsprob" tabnode_options="{'subchapter': 'activeCode_selectq', 'chapter': 'Chapter3', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Parsonsprob'}">
      <exercise label="functions_a10_pp" numbered="yes" adaptive="yes" indentation="hide">
        <statement>
          <p>Write a function called <c>volumeSphere</c> that takes a <c>double</c> radius as a parameter, and calculates and prints the volume of a sphere with that radius.  Use 3.14 for <c>pi</c>.
                    Use the lines to construct the code, then go back to complete the Activecode.</p>
        </statement>
        <blocks>
          <block order="6">
            <cline>void volumeSphere(double radius) {</cline>
          </block>
          <block order="3">
            <cline>    double pi = 3.14;</cline>
          </block>
          <block order="1">
            <choice correct="yes">
              <cline>    double volume;</cline>
            </choice>
            <choice>
              <cline>    int volume; </cline>
            </choice>
          </block>
          <block order="8">
            <cline>    volume = 4 * pi * radius * radius * radius / 3;</cline>
          </block>
          <block order="2" correct="no">
            <cline>    volume = 4 / 3 * pi * radius ^ 3; </cline>
          </block>
          <block order="7">
            <cline><![CDATA[    cout << volume << endl;]]></cline>
          </block>
          <block order="5">
            <cline>}</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
</section>
