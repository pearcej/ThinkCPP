<?xml version="1.0"?>
<section xml:id="chapter9_which-is-best">
  <title>Which is best?</title>
  <p>Anything that can be done with modifiers and fill-in functions can also be done with pure
    functions. In fact, there are programming languages, called <term>functional</term> programming
    languages, that only allow pure functions. Some programmers believe that programs that use pure
    functions are faster to develop and less error-prone than programs that use modifiers.
    Nevertheless, there are times when modifiers are convenient, and cases where functional programs
    are less efficient.</p>
  <p>In general, I recommend that you write pure functions whenever it is
    reasonable to do so, and resort to modifiers only if there is a
    compelling advantage. This approach might be called a functional
    programming style.</p>
  <exercise label="which_is_best_1">
    <statement>
      <p>What is a functional programming style?</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>Writing modifiers only if there is a compelling advantage. Otherwise, write pure
            functions.</p>
        </statement>
        <feedback>
          <p>Correct!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Writing fill-in functions only if there is a compelling advantage. Otherwise, write
            modifiers.</p>
        </statement>
        <feedback>
          <p>Try again.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Writing pure functions only if there is a compelling advantage. Otherwise, write
            modifiers.</p>
        </statement>
        <feedback>
          <p>Try again.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="which_is_best_2">
    <statement>
      <p>Anything that can be done with modifiers and <var/> functions can also be done with <var/>
        functions.
      </p>
    </statement>
    <setup>
      <var case="insensitive">
        <condition string="^\s*fill-in\s*$">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.*\s*$">
          <feedback>
            <p>Try again!</p>
          </feedback>
        </condition>
      </var>
      <var case="insensitive">
        <condition string="^\s*pure\s*$">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.*\s*$">
          <feedback>
            <p>Try again!</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
</section>