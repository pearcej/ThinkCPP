<?xml version="1.0"?>
<section xml:id="chapter15_a-distance-matrix">
  <title>A distance matrix</title>
  <p>Finally, we are ready to put the data from the file into a matrix.
    Specifically, the matrix will have one row and one column for each city.</p>
  <p>We'll create the matrix in <c>main</c>, with plenty of space to spare:</p>
  <program>
matrix&lt;int&gt; distances (50, 50, 0);
</program>
  <p>Inside <c>processLine</c>, we add new information to the matrix by getting the indices of the two cities
    from the <c>Set</c> and using them as matrix indices:</p>
  <program>int dist = convertToInt(distString);
int index1 = cities.add (city1);
int index2 = cities.add (city2);

distances[index1][index2] = distance;
distances[index2][index1] = distance;</program>
  <p>Finally, in <c>main</c> we can print the information in a human-readable form:</p>
  <program>for (int i=0; i &lt; cities.getNumElements(); i++) {
  cout &lt;&lt; cities.getElement(i) &lt;&lt; "\t";

  for (int j=0; j&lt;=i; j++) {
    cout &lt;&lt; distances[i][j] &lt;&lt; "\t";
  }
  cout &lt;&lt; endl;
}

cout &lt;&lt; "\t";
for (int i=0; i &lt; cities.getNumElements(); i++) {
  cout &lt;&lt; cities.getElement(i) &lt;&lt; "\t";
}
cout &lt;&lt; endl;</program>
  <p>This code produces the output shown at the beginning of the chapter.</p>
</section>