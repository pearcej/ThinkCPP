<?xml version="1.0"?>
<section xml:id="chapter2_activecode-exercises-1">
  <title>Activecode Exercises</title>
  <p>Answer the following <term>Activecode</term> questions to assess what you have learned in this chapter.</p>
  <exercise label="VARS_a">
    <caption>
      Fix the code below so that it runs without errors.  Hint: you might need to change the names of some variables.
    </caption>
    <program interactive="activecode" line-numbers="yes" xml:id="VARS_a1q_ps_editor">
      <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    char true = 'T';
    char false = 'F';

    cout << true << " is short for true. ";
    cout << false << " is short for false." << endl;
}
        ]]></code>
    </program>
    <solution>


    
                Below is one way to fix the program.  true and false are keywords, so they cannot be used as variable names.

    
    <program xml:id="VARS_a1a_ps_editor" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    char t = 'T';
    char f = 'F';
    cout << t << " is short for true. ";
    cout << f << " is short for false." << endl;
}
        ]]></code></program>

            

<exercise label="VARS_a1a_ps"><caption>Below is one way to fix the program.  <c>true</c> and <c>false</c> are keywords, so they cannot be used as variable names.</caption><program xml:id="VARS_a1a_ps_editor-1" interactive="activecode" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    char t = 'T';
    char f = 'F';
    cout << t << " is short for true. ";
    cout << f << " is short for false." << endl;
}
        ]]></code></program></exercise>
            </solution>
  </exercise>
  <exercise label="VARS_a2">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="VARS_a2_ps">
        <caption>
          Finish the code below so that it prints <q>I drive a 2014 Buick Regal</q>. Select the Pseudocode tab for hints for the construction of the code.
        </caption>
        <program xml:id="VARS_a2_ps_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
   string make;
   make = "Buick"

   // Finish the rest of the assignment statements by assigning
   // 2014 and Regal to their respective variables.

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << "I drive a " << year << " " << make << " ";
   cout << model << endl;
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Pseudocode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Pseudocode'}">
      <exercise label="VARS_a2_p_ps" numbered="yes" adaptive="yes" indentation="show">
        <caption>
          Finish the code below so that it prints <q>I drive a 2014 Buick Regal</q>. Use the lines to construct the pseudocode, then go back to complete the Activecode.
        </caption>
        <blocks>
          <block order="12">
            <cline>Open main()</cline>
          </block>
          <block order="7">
            <cline>Initialize variable make as string</cline>
          </block>
          <block order="1">
            <cline>Assign Buick to make;</cline>
          </block>
          <block order="10">
            <choice correct="yes">
              <cline>Initialize year as int;</cline>
            </choice>
            <choice>
              <cline>Initialize year as double; </cline>
            </choice>
          </block>
          <block order="8">
            <cline>Assign a number to year;</cline>
          </block>
          <block order="9">
            <choice correct="yes">
              <cline>Initialize model as string;</cline>
            </choice>
            <choice>
              <cline>Initialize model as char; </cline>
            </choice>
          </block>
          <block order="3">
            <cline>Assign model name to model;</cline>
          </block>
          <block order="6">
            <cline>Output year and make;</cline>
          </block>
          <block order="2">
            <cline>Output model name;</cline>
          </block>
          <block order="4">
            <cline>Close main()</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="VARS_a3">
    <caption>
      Fix the code below so that it prints <q>Cady scored 90% on the exam.</q>
    </caption>
    <program interactive="activecode" line-numbers="yes" xml:id="VARS_a3q_ps_editor">
      <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    // Modify the next line so that Cady = 0.9.
    int Cady = 3 * 5 * (6 / 100);

    // DO NOT MODIFY ANYTHING BELOW THIS LINE.
    cout << "Cady scored " << Cady * 100 << "% on the exam.";
}
        ]]></code>
    </program>
    <solution>


    
                Below is one way to fix the program.  We want to use doubles so that our result isn't rounded down to 0 through integer division.

    
    <program xml:id="VARS_a3a_ps_editor" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    double Cady = (3 * 5) * 6 / 100.0;
    cout << "Cady scored " << Cady * 100 << "% on the exam.";
}
        ]]></code></program>

            

<exercise label="VARS_a3a_ps"><caption>Below is one way to fix the program.  We want to use doubles so that our result isn't rounded down to 0 through integer division.</caption><program xml:id="VARS_a3a_ps_editor-1" interactive="activecode" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    double Cady = (3 * 5) * 6 / 100.0;
    cout << "Cady scored " << Cady * 100 << "% on the exam.";
}
        ]]></code></program></exercise>
            </solution>
  </exercise>
  <exercise label="VARS_a4">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="VARS_a4_ps">
        <caption>
          Finish the code below so that it returns the correct volume of a sphere. Select the Pseudocode tab for hints for the construction of the code.
                    Hint: think about what happens when you use integer division. The volume of a sphere is given by V = (4/3)(pi)(r^3).
        </caption>
        <program xml:id="VARS_a4_ps_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
   int radius = 5;
   double pi = 3.14;

   // Use these variables and the formula for volume to complete the next line.
   volume =

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << "Your solution had volume = " << volume << endl;  cout << "The correct solution has volume = 104.667";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Pseudocode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Pseudocode'}">
      <exercise label="VARS_a4_p_ps" numbered="yes" adaptive="yes" indentation="show">
        <caption>
          Finish the code below so that it returns the correct volume of a sphere. Check the hint below for help with the construction of the code. Hint: think about what happens when you use integer division. The volume of a sphere is given by V = (4/3)(pi)(r^3).
                    Use the lines on to construct the pseudocode, then go back to complete the Activecode.
        </caption>
        <blocks>
          <block order="6">
            <cline>Open main()</cline>
          </block>
          <block order="2">
            <cline>Initialize and assign radius;</cline>
          </block>
          <block order="8">
            <cline>Initialize and assign pi;</cline>
          </block>
          <block order="4">
            <choice correct="yes">
              <cline>Initialize volume as double;</cline>
            </choice>
            <choice>
              <cline>Initialize volume as int; </cline>
            </choice>
          </block>
          <block order="3">
            <cline>Calculate volume with spherical volume formula;</cline>
          </block>
          <block order="7">
            <cline>Output calculated volume;</cline>
          </block>
          <block order="5">
            <cline>Close main()</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="VARS_a5">
    <caption>
      Fix the code below so that assigns <c>a</c> its correct value of <c>'a'</c>.  Hint: use character operations!
    </caption>
    <program interactive="activecode" line-numbers="yes" xml:id="VARS_a5q_ps_editor">
      <code><![CDATA[
#include <iostream>
using namespace std;

int main() {
   char a = 's';

   // Fix the line below.  Do NOT change the numbers!  Instead,
   // change the location of the parentheses.
   a = a - 3 * 4 + (1 + 3);

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << a;
}
        ]]></code>
    </program>
    <solution>


    
                Below is one way to complete the program.  There are many creative ways that you could use the order of operations to come up with a complex expression that will bring you to 'a', here is one way.

    
    <program xml:id="VARS_a5a_ps_editor" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
   char a = 's';
   a = a - (3 * (4 + 1) + 3);
   cout << a;
}
        ]]></code></program>

            

<exercise label="VARS_a5a_ps"><caption>Below is one way to complete the program.  There are many creative ways that you could use the order of operations to come up with a complex expression that will bring you to <c>'a'</c>, here is one way.</caption><program xml:id="VARS_a5a_ps_editor-1" interactive="activecode" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
   char a = 's';
   a = a - (3 * (4 + 1) + 3);
   cout << a;
}
        ]]></code></program></exercise>
            </solution>
  </exercise>
  <exercise label="VARS_a6">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="VARS_a6_ps">
        <caption>
          Write code that assigns <q>apples</q> to the variable oranges, and <q>oranges</q> to the variable apples, then swaps their values.  Be sure to inclue any necessary headers.  YOU MAY NOT HARDCODE YOUR SOLUTION. Select the Pseudocode tab for hints for the construction of the code.
        </caption>
        <program xml:id="VARS_a6_ps_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
int main() {

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << "Your solution had apples = " << apples << "and oranges = " << oranges << "." << endl; cout << "The correct solution has apples = apples, and oranges = oranges.";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Pseudocode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Pseudocode'}">
      <exercise label="VARS_a6_p_ps" numbered="yes" adaptive="yes" indentation="show">
        <caption>
          Write code that assigns <q>apples</q> to the variable oranges, and <q>oranges</q> to the variable apples, then swaps their values.  Be sure to inclue any necessary headers. Use the lines to construct the pseudocode, then go back to complete the Activecode.
        </caption>
        <blocks>
          <block order="7">
            <cline>Open main()</cline>
          </block>
          <block order="1">
            <cline>Initialize oranges as string;</cline>
          </block>
          <block order="5">
            <cline>Assign "apples" to oranges;</cline>
          </block>
          <block order="8">
            <cline>Initialize apples as string;</cline>
          </block>
          <block order="3">
            <cline>Assign "oranges" to apples;</cline>
          </block>
          <block order="10">
            <cline>Assign apples to a temporary variable;</cline>
          </block>
          <block order="4">
            <cline>Assign oranges to apples;</cline>
          </block>
          <block order="9">
            <cline>Assign the temporary variable to oranges;</cline>
          </block>
          <block order="2">
            <cline>Output apples and oranges;</cline>
          </block>
          <block order="6">
            <cline>Close main()</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="VARS_a7">
    <caption>
      Write code that prints <q>Eat</q>, <q>More</q>, and <q>Chicken</q> on 3 consecutive lines. Be sure to inclue any necessary headers.
    </caption>
    <program interactive="activecode" line-numbers="yes" xml:id="VARS_a7q_ps_editor">
      <code>
int main() {

}
        </code>
    </program>
    <solution>


    
                Below is one way to implement the solution.

    
    <program xml:id="VARS_a7a_ps_editor" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    cout << "Eat" << endl;
    cout << "More" << endl;
    cout << "Chicken" << endl;
}
        ]]></code></program>

            

<exercise label="VARS_a7a_ps"><caption>Below is one way to implement the solution.</caption><program xml:id="VARS_a7a_ps_editor-1" interactive="activecode" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    cout << "Eat" << endl;
    cout << "More" << endl;
    cout << "Chicken" << endl;
}
        ]]></code></program></exercise>
            </solution>
  </exercise>
  <exercise label="VARS_a8">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="VARS_a8_ps">
        <caption>
          Write code that calculates how much you you will spend after tipping 20% on your $36.25 dinner.  Save the result of this calculation in <c>plusTip</c>.  Be sure to include any necessary headers. Select the Pseudocode tab for hints for the construction of the code.
        </caption>
        <program xml:id="VARS_a8_ps_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
int main() {

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << "Your solution had plusTip = " << plusTip << endl; cout << "The correct solution has plusTip = 43.5";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Pseudocode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Pseudocode'}">
      <exercise label="VARS_a8_p_ps" numbered="yes" adaptive="yes" indentation="show">
        <caption>
          Write code that calculates how much you you will spend after tipping 20% on your $36.25 dinner.  Save the result of this calculation in <c>plusTip</c>.
                    Use the lines to construct the pseudocode, then go back to complete the Activecode.
        </caption>
        <blocks>
          <block order="6">
            <cline>Open main()</cline>
          </block>
          <block order="1">
            <cline>Initialize and assign $36.25 to price;</cline>
          </block>
          <block order="4">
            <choice correct="yes">
              <cline>Initialize and assign 1.20 to tip;</cline>
            </choice>
            <choice>
              <cline>Initialize and assign .20 to tip; </cline>
            </choice>
          </block>
          <block order="5">
            <cline>Calculate plusTip using tip and price;</cline>
          </block>
          <block order="3">
            <cline>Output plusTip;</cline>
          </block>
          <block order="7">
            <cline>Close main()</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
  <exercise label="VARS_a9">
    <caption>
      You have about three hours and fifteen minutes of homework to do today.  Rather than starting it right away, you choose to procrastinate by calculating how many seconds you'll be spending on your work.  Convert the time to seconds and store the result in <c>seconds</c>.  Be sure to inclue any necessary headers.
    </caption>
    <program interactive="activecode" line-numbers="yes" xml:id="VARS_a9q_ps_editor">
      <code><![CDATA[
int main() {

    // DO NOT MODIFY ANYTHING BELOW THIS LINE.
    cout << "Your solution had seconds = " << seconds << endl;  cout << "The correct solution has seconds = 11700";
}
        ]]></code>
    </program>
    <solution>


    
                Below is one way to implement the solution.

    
    <program xml:id="VARS_a9a_ps_editor" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    int hours = 3;
    int minutes = 15;
    int totalMinutes = minutes + 60 * hours;
    int seconds = totalMinutes * 60;
}
        ]]></code></program>

            

<exercise label="VARS_a9a_ps"><caption>Below is one way to implement the solution.</caption><program xml:id="VARS_a9a_ps_editor-1" interactive="activecode" line-numbers="yes"><code><![CDATA[
#include <iostream>
using namespace std;

int main() {
    int hours = 3;
    int minutes = 15;
    int totalMinutes = minutes + 60 * hours;
    int seconds = totalMinutes * 60;
}
        ]]></code></program></exercise>
            </solution>
  </exercise>
  <exercise label="VARS_a10">
    <TabNode tabname="Activecode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Activecode'}">
      <exercise label="VARS_a10_ps">
        <caption>
          Write code that calculates and prints the average of a and b if a = 3.14, and b = 1.59.  You may only use one line of code.  Be sure to inclue any necessary headers. Select the Pseudocode tab for hints for the construction of the code.
        </caption>
        <program xml:id="VARS_a10_ps_editor" interactive="activecode" line-numbers="yes">
          <code><![CDATA[
int main() {

   // DO NOT MODIFY ANYTHING BELOW THIS LINE.
   cout << endl;  cout << "Your program should have printed 2.365";
}
        ]]></code>
        </program>
      </exercise>
    </TabNode>
    <TabNode tabname="Pseudocode" tabnode_options="{'subchapter': 'activeCode_pseudocode', 'chapter': 'Chapter2', 'basecourse': 'thinkcpp', 'optional': '', 'optclass': '', 'tabname': 'Pseudocode'}">
      <exercise label="VARS_a10_p_ps" numbered="yes" adaptive="yes" indentation="show">
        <caption>
          Write code that calculates and prints the average of a and b if a = 3.14, and b = 1.59.  You may only use one line of code. Use the lines on the to construct the pseudocode, then go back to complete the Activecode.
        </caption>
        <blocks>
          <block order="2">
            <cline>Open main()</cline>
          </block>
          <block order="3">
            <cline>Output the expression for average of 2 numbers;</cline>
          </block>
          <block order="1">
            <cline>Close main()</cline>
          </block>
        </blocks>
      </exercise>
    </TabNode>
  </exercise>
</section>
